{"version":3,"sources":["module.js","services/PaginatorSettingsService.js","controllers/Paginator.js","components/paginator.js"],"names":[],"mappings":"AAAA,CAAA,YAAA;IACA,QAAA,OAAA,uCAAA;;IAEA,QAAA,OAAA,0CAAA;QACA;;;IAGA,QAAA,OAAA,yCAAA;QACA;;;IAGA,QAAA,OAAA,8BAAA;QACA;;;;ACZA,CAAA,YAAA;IACA,IAAA,2BAAA,SAAA,yBAAA,UAAA;QACA,KAAA,cAAA,SAAA,cAAA;YACA,OAAA;;;;IAIA;SACA,OAAA;SACA,SAAA,4BAAA,SAAA,mCAAA;YACA;;YAEA,IAAA,WAAA;;YAEA,SAAA,WAAA;;YAEA,SAAA,cAAA,SAAA,YAAA,UAAA;gBACA,SAAA,WAAA;;;YAGA,SAAA,OAAA,SAAA,kCAAA;gBACA,OAAA,IAAA,yBAAA,SAAA;;;;;ACrBA,CAAA,YAAA;IACA,IAAA,WAAA;QACA,OAAA;QACA,gBAAA;;IAEA;SACA,OAAA;SACA,WAAA,oEAAA,SAAA;YACA;YACA;YACA;UACA;YACA;;YAEA,IAAA,aAAA,SAAA,WAAA,GAAA;gBACA,UAAA,SAAA,WAAA,GAAA;gBACA,WAAA,QAAA,WAAA,GAAA;gBACA,oBAAA,EAAA;gBACA,WAAA,IAAA,iBAAA;;YAEA,SAAA,kBAAA;gBACA,QAAA,IAAA;;gBAEA;qBACA;qBACA;qBACA,SAAA;;gBAEA;qBACA,KAAA;qBACA,SAAA,WAAA,KAAA;;;YAGA,SAAA,SAAA;gBACA;gBACA;gBACA;;;YAGA,SAAA,oBAAA;gBACA,SAAA,SAAA;;gBAEA,WAAA;;gBAEA;qBACA,SAAA;qBACA,SAAA,WAAA,KAAA;;;YAGA,SAAA,aAAA;gBACA,IAAA,aAAA,kCAAA,MAAA;;gBAEA;qBACA,QAAA,UAAA,WAAA;wBACA,IAAA,qBAAA,eAAA;;wBAEA,WAAA,GAAA,oBAAA,YAAA;4BACA,OAAA,MAAA;;;;;YAKA,SAAA,iBAAA;gBACA,SAAA,QAAA,QAAA,IAAA,EAAA,WAAA,MAAA,YAAA,MAAA,eAAA,MAAA,SAAA;;;YAGA,SAAA,iBAAA;gBACA,SAAA;;;YAGA,KAAA,UAAA,YAAA;gBACA;gBACA;gBACA;;;;;ACzEA,CAAA,YAAA;IACA;SACA,OAAA;SACA,UAAA,kBAAA;YACA,UAAA,YAAA;gBACA;oBACA;oBACA;wBACA;wBACA;wBACA;oBACA;oBACA;;;YAGA,YAAA;gBACA,SAAA;gBACA,SAAA;gBACA,SAAA;gBACA,QAAA;;YAEA,YAAA;;;AAGA","file":"angular-paginator.js","sourcesContent":["(function () {\n    angular.module('theoryofnekomata.paginator.services', []);\n\n    angular.module('theoryofnekomata.paginator.controllers', [\n        'theoryofnekomata.paginator.services'\n    ]);\n\n    angular.module('theoryofnekomata.paginator.components', [\n        'theoryofnekomata.paginator.controllers'\n    ]);\n\n    angular.module('theoryofnekomata.paginator', [\n        'theoryofnekomata.paginator.components'\n    ]);\n})();\n","(function () {\n    var PaginatorSettingsService = function PaginatorSettingsService(settings) {\n        this.getSettings = function getSettings() {\n            return settings;\n        };\n    };\n\n    angular\n        .module('theoryofnekomata.paginator.services')\n        .provider('PaginatorSettingsService', function PaginatorSettingsServiceProvider() {\n            \"ngInject\";\n\n            var provider = this;\n\n            provider.settings = {};\n\n            provider.setSettings = function setSettings(settings) {\n                provider.settings = settings;\n            };\n\n            provider.$get = function PaginatorSettingsServiceFactory() {\n                return new PaginatorSettingsService(provider.settings);\n            };\n        });\n})();\n","(function () {\n    var debounce = null,\n        lock = false,\n        debounceDelay = 250;\n\n    angular\n        .module('theoryofnekomata.paginator.controllers')\n        .controller('PaginatorCtrl', function PaginatorCtrl(\n            $element,\n            $scope,\n            PaginatorSettingsService\n        ) {\n            \"ngInject\";\n\n            var $component = $element.children().eq(0),\n                $models = $element.children().eq(1),\n                $content = $models.children().eq(1),\n                $contentContainer = $('<div>'),\n                observer = new MutationObserver(update);\n\n            function extractElements() {\n                console.log($content);\n\n                $content\n                    .children()\n                    .children()\n                    .appendTo($contentContainer);\n\n                $models\n                    .find('.header, .footer')\n                    .appendTo($component.find('.watch'));\n            }\n\n            function update() {\n                detachObserver();\n                extractElements();\n                attachObserver();\n            }\n\n            function initComponentHtml() {\n                $element.addClass('paginator-wrapper');\n\n                $component.paginate();\n\n                $contentContainer\n                    .addClass('content')\n                    .appendTo($component.find('.watch'));\n            }\n\n            function initEvents() {\n                var eventNames = 'modelchangestart modelchangeend'.split(' ');\n\n                eventNames\n                    .forEach(function (eventName) {\n                        var paginatorEventName = 'paginator.' + eventName;\n\n                        $component.on(paginatorEventName, function () {\n                            $scope.$emit(paginatorEventName);\n                        });\n                    });\n            }\n\n            function attachObserver() {\n                observer.observe($models[0], { childList: true, attributes: true, characterData: true, subtree: true });\n            }\n\n            function detachObserver() {\n                observer.disconnect();\n            }\n\n            this.$onInit = function () {\n                initComponentHtml();\n                initEvents();\n                attachObserver();\n            };\n        });\n})();\n","(function () {\n    angular\n        .module('theoryofnekomata.paginator.components')\n        .component('tmtknPaginator', {\n            template: function () {\n                return (\n                    '<div class=\"paginator-component\"></div>' +\n                    '<div class=\"paginator-model\">' +\n                        '<div data-ng-transclude=\"headers\"></div>' +\n                        '<div class=\"paginator-content\" data-ng-transclude=\"content\"></div>' +\n                        '<div data-ng-transclude=\"footers\"></div>' +\n                    '</div>' +\n                    '<div class=\"paginator-loader\" data-ng-transclude=\"loader\"></div>'\n                );\n            },\n            transclude: {\n                headers: '?tmtknPageHeaders',\n                content: 'tmtknPaginatorContent',\n                footers: '?tmtknPageFooters',\n                loader: '?tmtknPaginatorLoader'\n            },\n            controller: 'PaginatorCtrl'\n        });\n})();\n"]}