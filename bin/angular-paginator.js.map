{"version":3,"sources":["module.js","services/PaginatorSettingsService.js","controllers/Paginator.js","components/paginator.js"],"names":[],"mappings":"AAAA,CAAA,YAAA;IACA,QAAA,OAAA,uCAAA;;IAEA,QAAA,OAAA,0CAAA;QACA;;;IAGA,QAAA,OAAA,yCAAA;QACA;;;IAGA,QAAA,OAAA,8BAAA;QACA;;;;ACZA,CAAA,YAAA;IACA,IAAA,2BAAA,SAAA,yBAAA,UAAA;QACA,KAAA,cAAA,SAAA,cAAA;YACA,OAAA;;;;IAIA;SACA,OAAA;SACA,SAAA,4BAAA,SAAA,mCAAA;YACA;;YAEA,IAAA,WAAA;;YAEA,SAAA,WAAA;;YAEA,SAAA,cAAA,SAAA,YAAA,UAAA;gBACA,SAAA,WAAA;;;YAGA,SAAA,OAAA,SAAA,kCAAA;gBACA,OAAA,IAAA,yBAAA,SAAA;;;;;ACrBA,CAAA,YAAA;IACA,IAAA,WAAA;QACA,OAAA;QACA,gBAAA;;IAEA;SACA,OAAA;SACA,WAAA,oEAAA,SAAA;YACA;YACA;YACA;UACA;YACA;;YAEA,IAAA,aAAA,SAAA,WAAA,GAAA;gBACA,UAAA,SAAA,WAAA,GAAA;;gBAEA,UAAA,QAAA,WAAA,GAAA;gBACA,WAAA,QAAA,WAAA,GAAA;gBACA,UAAA,QAAA,WAAA,GAAA;;YAEA,SAAA,gBAAA;gBACA,IAAA,WAAA,QAAA,KAAA;;;;gBAIA,WAAA,KAAA,WAAA;gBACA,WAAA,OAAA,SAAA,MAAA;;;YAGA,SAAA,gBAAA;gBACA,IAAA,kBAAA,EAAA;;;;gBAIA,gBAAA,SAAA,WAAA,OAAA,SAAA;gBACA,WAAA,KAAA,YAAA;gBACA,WAAA,OAAA;;;YAGA,SAAA,gBAAA;gBACA,IAAA,WAAA,QAAA,KAAA;;;;gBAIA,WAAA,KAAA,WAAA;gBACA,WAAA,OAAA,SAAA,MAAA;;;YAGA,SAAA,YAAA;gBACA,WAAA,KAAA;;;YAGA,SAAA,eAAA;gBACA,IAAA,WAAA,yBAAA;;gBAEA,SAAA,SAAA;oBACA;;;gBAGA,WAAA,SAAA;;;YAGA,SAAA,SAAA;gBACA,OAAA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA,OAAA;;;YAGA,SAAA,iBAAA;gBACA,IAAA,CAAA,CAAA,MAAA;oBACA;;;gBAGA,IAAA,CAAA,CAAA,UAAA;oBACA,aAAA;;;gBAGA,WAAA,WAAA,YAAA;oBACA;mBACA;;;YAGA,KAAA,UAAA,YAAA;;;;;;;gBAOA,SAAA,SAAA;;gBAEA,WAAA,GAAA,8BAAA,YAAA;oBACA,OAAA,MAAA;oBACA,SAAA,SAAA;;;gBAGA,WAAA,GAAA,4BAAA,YAAA;oBACA,OAAA,MAAA;oBACA,SAAA,YAAA;;;gBAGA,QAAA,GAAA,sBAAA,YAAA;oBACA;;;gBAGA,SAAA,GAAA,sBAAA,YAAA;oBACA;;;gBAGA,QAAA,GAAA,sBAAA,YAAA;oBACA;;;;;;ACnHA,CAAA,YAAA;IACA;SACA,OAAA;SACA,UAAA,kBAAA;YACA,UAAA,YAAA;gBACA;oBACA;oBACA;wBACA;wBACA;wBACA;oBACA;oBACA;;;YAGA,YAAA;gBACA,SAAA;gBACA,SAAA;gBACA,SAAA;gBACA,QAAA;;YAEA,YAAA;;;AAGA","file":"angular-paginator.js","sourcesContent":["(function () {\n    angular.module('theoryofnekomata.paginator.services', []);\n\n    angular.module('theoryofnekomata.paginator.controllers', [\n        'theoryofnekomata.paginator.services'\n    ]);\n\n    angular.module('theoryofnekomata.paginator.components', [\n        'theoryofnekomata.paginator.controllers'\n    ]);\n\n    angular.module('theoryofnekomata.paginator', [\n        'theoryofnekomata.paginator.components'\n    ]);\n})();\n","(function () {\n    var PaginatorSettingsService = function PaginatorSettingsService(settings) {\n        this.getSettings = function getSettings() {\n            return settings;\n        };\n    };\n\n    angular\n        .module('theoryofnekomata.paginator.services')\n        .provider('PaginatorSettingsService', function PaginatorSettingsServiceProvider() {\n            \"ngInject\";\n\n            var provider = this;\n\n            provider.settings = {};\n\n            provider.setSettings = function setSettings(settings) {\n                provider.settings = settings;\n            };\n\n            provider.$get = function PaginatorSettingsServiceFactory() {\n                return new PaginatorSettingsService(provider.settings);\n            };\n        });\n})();\n","(function () {\n    var debounce = null,\n        lock = false,\n        debounceDelay = 250;\n\n    angular\n        .module('theoryofnekomata.paginator.controllers')\n        .controller('PaginatorCtrl', function PaginatorCtrl(\n            $element,\n            $scope,\n            PaginatorSettingsService\n        ) {\n            \"ngInject\";\n\n            var $component = $element.children().eq(0),\n                $models = $element.children().eq(1),\n\n                $header = $models.children().eq(0),\n                $content = $models.children().eq(1),\n                $footer = $models.children().eq(2);\n\n            function updateHeaders() {\n                var $headers = $header.find('.header');\n\n                //$headers = $headers.clone(true, true);\n\n                $component.find('.header').remove();\n                $component.append($headers.clone(true));\n            }\n\n            function updateContent() {\n                var $contentWrapper = $('<div>');\n\n                //$contentEl = $contentEl.clone(true, true);\n\n                $contentWrapper.addClass('content').append($content.children());\n                $component.find('.content').remove();\n                $component.append($contentWrapper);\n            }\n\n            function updateFooters() {\n                var $footers = $footer.find('.footer');\n\n                //$footers = $footers.clone(true, true);\n\n                $component.find('.footer').remove();\n                $component.append($footers.clone(true));\n            }\n\n            function clearView() {\n                $component.html('');\n            }\n\n            function paginateView() {\n                var settings = PaginatorSettingsService.getSettings();\n\n                settings.ignore = [\n                    '[data-ng-repeat]'\n                ];\n\n                $component.paginate(settings);\n            }\n\n            function update() {\n                lock = true;\n                clearView();\n                updateHeaders();\n                updateContent();\n                updateFooters();\n                paginateView();\n                lock = false;\n            }\n\n            function debounceUpdate() {\n                if (!!lock) {\n                    return;\n                }\n\n                if (!!debounce) {\n                    clearTimeout(debounce);\n                }\n\n                debounce = setTimeout(function () {\n                    update();\n                }, debounceDelay);\n            }\n\n            this.$onInit = function () {\n                //var observer = new MutationObserver(update);\n                //\n                //observer.observe($header[0], { childList: true, attributes: true, characterData: true, subtree: true });\n                //observer.observe($content[0], { childList: true, attributes: true, characterData: true, subtree: true });\n                //observer.observe($footer[0], { childList: true, attributes: true, characterData: true, subtree: true });\n\n                $element.addClass('paginator-wrapper');\n\n                $component.on('paginator.modelchangestart', function () {\n                    $scope.$emit('paginator.modelchangestart');\n                    $element.addClass('-loading');\n                });\n\n                $component.on('paginator.modelchangeend', function () {\n                    $scope.$emit('paginator.modelchangeend');\n                    $element.removeClass('-loading');\n                });\n\n                $header.on('DOMSubtreeModified', function () {\n                    debounceUpdate();\n                });\n\n                $content.on('DOMSubtreeModified', function () {\n                    debounceUpdate();\n                });\n\n                $footer.on('DOMSubtreeModified', function () {\n                    debounceUpdate();\n                });\n            };\n        });\n})();\n","(function () {\n    angular\n        .module('theoryofnekomata.paginator.components')\n        .component('tmtknPaginator', {\n            template: function () {\n                return (\n                    '<div class=\"paginator-component\"></div>' +\n                    '<div class=\"paginator-model\">' +\n                        '<div data-ng-transclude=\"headers\"></div>' +\n                        '<div data-ng-transclude=\"content\"></div>' +\n                        '<div data-ng-transclude=\"footers\"></div>' +\n                    '</div>' +\n                    '<div class=\"paginator-loader\" data-ng-transclude=\"loader\"></div>'\n                );\n            },\n            transclude: {\n                headers: '?tmtknPageHeaders',\n                content: 'tmtknPaginatorContent',\n                footers: '?tmtknPageFooters',\n                loader: '?tmtknPaginatorLoader'\n            },\n            controller: 'PaginatorCtrl'\n        });\n})();\n"]}